{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shloi\\\\Programmimg\\\\devconnector2\\\\client\\\\src\\\\components\\\\profiles\\\\Profiles.js\";\nimport React, { Fragment, fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from \"react-redux\";\nimport Spinner from '../layout/Spinner';\nimport ProfileItem from './profileItem';\nimport { getProfiles } from \"../../actions/profile\";\n\nconst Profiles = ({\n  getProfiles,\n  profile: {\n    profiles,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getProfiles();\n  }, []);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, loading ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Developers\"), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fab fa-connectdevelop\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), \" Browse and connect with developers\"), React.createElement(\"div\", {\n    className: \"profiles\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, profiles.length > 0 ? profiles.map(profile => React.createElement(ProfileIthem, {\n    key: profile._id,\n    profile: profile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  })) : React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"No Profiles found...\"))));\n};\n\nProfiles.propTypes = {\n  getProfiles: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getProfiles\n})(Profiles);","map":{"version":3,"sources":["C:\\Users\\shloi\\Programmimg\\devconnector2\\client\\src\\components\\profiles\\Profiles.js"],"names":["React","Fragment","fragment","useEffect","PropTypes","connect","Spinner","ProfileItem","getProfiles","Profiles","profile","profiles","loading","length","map","_id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,QAAzB,EAAmCC,SAAnC,QAAmD,OAAnD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAAQC,WAAR,QAA0B,uBAA1B;;AAGA,MAAMC,QAAQ,GAAG,CAAC;AAACD,EAAAA,WAAD;AAAcE,EAAAA,OAAO,EAAE;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX;AAAvB,CAAD,KAAiD;AAC9DT,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,WAAW;AACd,GAFQ,EAEN,EAFM,CAAT;AAIA,SAAO,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACFI,OAAO,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAgB,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACpB;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADoB,EAEpB;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,SAAS,EAAC,uBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,wCAFoB,EAKpB;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,QAAQ,CAACE,MAAT,GAAkB,CAAlB,GACGF,QAAQ,CAACG,GAAT,CAAaJ,OAAO,IAChB,oBAAC,YAAD;AAAc,IAAA,GAAG,EAAEA,OAAO,CAACK,GAA3B;AAAgC,IAAA,OAAO,EAAEL,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADH,GAIG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BALR,CALoB,CADrB,CAAP;AAeH,CApBD;;AAsBAD,QAAQ,CAACO,SAAT,GAAqB;AACjBR,EAAAA,WAAW,EAAEJ,SAAS,CAACa,IAAV,CAAeC,UADX;AAEjBR,EAAAA,OAAO,EAAEN,SAAS,CAACe,MAAV,CAAiBD;AAFT,CAArB;;AAMA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9BX,EAAAA,OAAO,EAAEW,KAAK,CAACX;AADe,CAAL,CAA7B;;AAIA,eAAeL,OAAO,CAACe,eAAD,EAAkB;AAACZ,EAAAA;AAAD,CAAlB,CAAP,CAAwCC,QAAxC,CAAf","sourcesContent":["import React, {Fragment, fragment, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from \"react-redux\";\r\nimport Spinner from '../layout/Spinner';\r\nimport ProfileItem from './profileItem';\r\nimport {getProfiles} from \"../../actions/profile\";\r\n\r\n\r\nconst Profiles = ({getProfiles, profile: {profiles, loading}}) => {\r\n    useEffect(() => {\r\n        getProfiles();\r\n    }, []);\r\n\r\n    return <Fragment>\r\n        {loading ? <Spinner/> : <Fragment>\r\n            <h1 className=\"large text-primary\">Developers</h1>\r\n            <p className=\"lead\">\r\n                <i className=\"fab fa-connectdevelop\"></i> Browse and connect with developers\r\n            </p>\r\n            <div className=\"profiles\">\r\n                {profiles.length > 0 ? (\r\n                    profiles.map(profile => (\r\n                        <ProfileIthem key={profile._id} profile={profile}/>\r\n                    ))\r\n                ) : <h4>No Profiles found...</h4>}\r\n            </div>\r\n        </Fragment>}\r\n    </Fragment>\r\n};\r\n\r\nProfiles.propTypes = {\r\n    getProfiles: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile\r\n});\r\n\r\nexport default connect(mapStateToProps, {getProfiles})(Profiles);"]},"metadata":{},"sourceType":"module"}