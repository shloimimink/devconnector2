{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shloi\\\\Programmimg\\\\devconnector2\\\\client\\\\src\\\\components\\\\profile\\\\ProfileGithub.js\";\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from \"react-redux\";\nimport { getGitHubRepos } from \"../../actions/profile\";\nimport Spinner from '../layout/Spinner';\n\nconst ProfileGithub = ({\n  username,\n  getGitHubRepos,\n  repos\n}) => {\n  useEffect(() => {\n    getGitHubRepos(username);\n  }, [getGitHubRepos]);\n  return React.createElement(\"div\", {\n    className: \"profile-github\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"text-primary my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"Github Repos\"), repos === null ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }) : repos.map(repo => React.createElement(\"div\", {\n    key: repo._id,\n    className: \"repo bg-white p-1 my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: repo.html_url,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, repo.name)), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, repo.description)))));\n};\n\nProfileGithub.propTypes = {\n  getGitHubRepos: PropTypes.func.isRequired,\n  repos: PropTypes.array.isRequired,\n  username: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  repos: state.profile.repos\n});\n\nexport default connect(mapStateToProps, {\n  getGitHubRepos\n})(ProfileGithub);","map":{"version":3,"sources":["C:\\Users\\shloi\\Programmimg\\devconnector2\\client\\src\\components\\profile\\ProfileGithub.js"],"names":["React","useEffect","PropTypes","connect","getGitHubRepos","Spinner","ProfileGithub","username","repos","map","repo","_id","html_url","name","description","propTypes","func","isRequired","array","string","mapStateToProps","state","profile"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,cAAR,QAA6B,uBAA7B;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAGA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWH,EAAAA,cAAX;AAA2BI,EAAAA;AAA3B,CAAD,KAAuC;AACzDP,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,cAAc,CAACG,QAAD,CAAd;AACH,GAFQ,EAEN,CAACH,cAAD,CAFM,CAAT;AAGA,SAAO;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACH;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADG,EAEFI,KAAK,KAAK,IAAV,GAAiB,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAjB,GACGA,KAAK,CAACC,GAAN,CAAUC,IAAI,IACV;AAAK,IAAA,GAAG,EAAEA,IAAI,CAACC,GAAf;AAAoB,IAAA,SAAS,EAAC,wBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,IAAI,EAAED,IAAI,CAACE,QAAd;AAAwB,IAAA,MAAM,EAAC,QAA/B;AAAwC,IAAA,GAAG,EAAC,qBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,IAAI,CAACG,IADV,CADJ,CADJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIH,IAAI,CAACI,WAAT,CANJ,CADJ,CADJ,CAHD,CAAP;AAkBH,CAtBD;;AAwBAR,aAAa,CAACS,SAAd,GAA0B;AACtBX,EAAAA,cAAc,EAAEF,SAAS,CAACc,IAAV,CAAeC,UADT;AAEtBT,EAAAA,KAAK,EAAEN,SAAS,CAACgB,KAAV,CAAgBD,UAFD;AAGtBV,EAAAA,QAAQ,EAAEL,SAAS,CAACiB,MAAV,CAAiBF;AAHL,CAA1B;;AAOA,MAAMG,eAAe,GAAGC,KAAK,KAAK;AAC9Bb,EAAAA,KAAK,EAAEa,KAAK,CAACC,OAAN,CAAcd;AADS,CAAL,CAA7B;;AAIA,eAAeL,OAAO,CAACiB,eAAD,EAAkB;AAAChB,EAAAA;AAAD,CAAlB,CAAP,CAA2CE,aAA3C,CAAf","sourcesContent":["import React, {useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from \"react-redux\";\r\nimport {getGitHubRepos} from \"../../actions/profile\";\r\nimport Spinner from '../layout/Spinner';\r\n\r\n\r\nconst ProfileGithub = ({username, getGitHubRepos, repos}) => {\r\n    useEffect(() => {\r\n        getGitHubRepos(username);\r\n    }, [getGitHubRepos]);\r\n    return <div className=\"profile-github\">\r\n        <h2 className=\"text-primary my-1\">Github Repos</h2>\r\n        {repos === null ? <Spinner/> : (\r\n            repos.map(repo => (\r\n                <div key={repo._id} className='repo bg-white p-1 my-1'>\r\n                    <div>\r\n                        <h4>\r\n                            <a href={repo.html_url} target='_blank' rel='noopener noreferrer'>\r\n                                {repo.name}\r\n                            </a>\r\n                        </h4>\r\n                        <p>{repo.description}</p>\r\n                    </div>\r\n                    \r\n                </div>\r\n            ))\r\n        )}\r\n    </div>;\r\n};\r\n\r\nProfileGithub.propTypes = {\r\n    getGitHubRepos: PropTypes.func.isRequired,\r\n    repos: PropTypes.array.isRequired,\r\n    username: PropTypes.string.isRequired\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    repos: state.profile.repos\r\n});\r\n\r\nexport default connect(mapStateToProps, {getGitHubRepos})(ProfileGithub);"]},"metadata":{},"sourceType":"module"}