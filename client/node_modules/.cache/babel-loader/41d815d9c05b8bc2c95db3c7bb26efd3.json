{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from \"./alert\";\nimport { ACCOUNT_DELETED, GET_PROFILE, PROFILE_ERROR, UPDATE_PROFILE, CLEAR_PROFILE, GET_PROFILES, GET_REPOS } from \"./types\"; // Get current users profile\n\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/profile/me');\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Get all profiles\n\nexport const getProfiles = () => async dispatch => {\n  dispatch({\n    type: CLEAR_PROFILE\n  });\n\n  try {\n    const res = await axios.get('/api/profile');\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Get Profile By ID\n\nexport const getProfileById = userId => async dispatch => {\n  try {\n    const res = await axios.get(\"/api/profile/\".concat(userId));\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Get Github Repos\n\nexport const getGitHubRepos = username => async dispatch => {\n  try {\n    const res = await axios.get(\"/api/profile/github/\".concat(username));\n    dispatch({\n      type: GET_REPOS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Create or update profile\n\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.post('/api/profile', formData, config);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\n\n    if (!edit) {\n      history.push('/dashboard');\n    }\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Add Experience\n\nexport const addExperience = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put('/api/profile/experience', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Experience Added', 'success'));\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Add Education\n\nexport const addEducation = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put('/api/profile/education', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Education Added', 'success'));\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete experience\n\nexport const deleteExperience = id => async dispatch => {\n  try {\n    const res = await axios.delete(\"/api/profile/experience/\".concat(id));\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Experience Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete education\n\nexport const deleteEducation = id => async dispatch => {\n  try {\n    const res = await axios.delete(\"/api/profile/education/\".concat(id));\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Education Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete account & profile\n\nexport const deleteAccount = () => async dispatch => {\n  if (window.confirm('Are you sure ? This can NOT be undone!')) {\n    try {\n      await axios.delete('/api/profile');\n      dispatch({\n        type: CLEAR_PROFILE\n      });\n      dispatch({\n        type: ACCOUNT_DELETED\n      });\n      dispatch(setAlert('Your account has been permanantly deleted'));\n    } catch (err) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: err.response.statusText,\n          status: err.response.status\n        }\n      });\n    }\n  }\n};","map":{"version":3,"sources":["C:\\Users\\shloi\\Programmimg\\devconnector2\\client\\src\\actions\\profile.js"],"names":["axios","setAlert","ACCOUNT_DELETED","GET_PROFILE","PROFILE_ERROR","UPDATE_PROFILE","CLEAR_PROFILE","GET_PROFILES","GET_REPOS","getCurrentProfile","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","getProfiles","getProfileById","userId","getGitHubRepos","username","createProfile","formData","history","edit","config","headers","post","push","errors","forEach","error","addExperience","put","addEducation","deleteExperience","id","delete","deleteEducation","deleteAccount","window","confirm"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport {setAlert} from \"./alert\";\r\n\r\nimport {\r\n    ACCOUNT_DELETED,\r\n    GET_PROFILE,\r\n    PROFILE_ERROR,\r\n    UPDATE_PROFILE,\r\n    CLEAR_PROFILE,\r\n    GET_PROFILES,\r\n    GET_REPOS\r\n} from \"./types\";\r\n\r\n\r\n// Get current users profile\r\nexport const getCurrentProfile = () => async dispatch => {\r\n    try {\r\n        const res = await axios.get('/api/profile/me');\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {msg: err.response.statusText, status: err.response.status}\r\n        })\r\n    }\r\n};\r\n\r\n// Get all profiles\r\nexport const getProfiles = () => async dispatch => {\r\n    dispatch({type: CLEAR_PROFILE});\r\n    try {\r\n        const res = await axios.get('/api/profile');\r\n        dispatch({\r\n            type: GET_PROFILES,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {msg: err.response.statusText, status: err.response.status}\r\n        })\r\n    }\r\n};\r\n\r\n// Get Profile By ID\r\nexport const getProfileById = userId => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`/api/profile/${userId}`);\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {msg: err.response.statusText, status: err.response.status}\r\n        })\r\n    }\r\n};\r\n\r\n// Get Github Repos\r\nexport const getGitHubRepos = (username) => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`/api/profile/github/${username}`);\r\n        dispatch({\r\n            type: GET_REPOS,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {msg: err.response.statusText, status: err.response.status}\r\n        })\r\n    }\r\n};\r\n\r\n\r\n// Create or update profile\r\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n        const res = await axios.post('/api/profile', formData, config);\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        });\r\n        dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\r\n\r\n        if (!edit) {\r\n            history.push('/dashboard');\r\n        }\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n\r\n        if (errors) {\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {msg: err.response.statusText, status: err.response.status}\r\n        })\r\n    }\r\n};\r\n\r\n// Add Experience\r\nexport const addExperience = (formData, history) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n        const res = await axios.put('/api/profile/experience', formData, config);\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        });\r\n        dispatch(setAlert('Experience Added', 'success'));\r\n\r\n        history.push('/dashboard');\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n\r\n        if (errors) {\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {msg: err.response.statusText, status: err.response.status}\r\n        })\r\n    }\r\n};\r\n\r\n// Add Education\r\nexport const addEducation = (formData, history) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n        const res = await axios.put('/api/profile/education', formData, config);\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        });\r\n        dispatch(setAlert('Education Added', 'success'));\r\n\r\n        history.push('/dashboard');\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n\r\n        if (errors) {\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {msg: err.response.statusText, status: err.response.status}\r\n        })\r\n    }\r\n};\r\n\r\n// Delete experience\r\nexport const deleteExperience = (id) => async dispatch => {\r\n    try {\r\n        const res = await axios.delete(`/api/profile/experience/${id}`);\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        });\r\n        dispatch(setAlert('Experience Removed', 'success'));\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {msg: err.response.statusText, status: err.response.status}\r\n        })\r\n    }\r\n};\r\n\r\n// Delete education\r\nexport const deleteEducation = (id) => async dispatch => {\r\n    try {\r\n        const res = await axios.delete(`/api/profile/education/${id}`);\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        });\r\n        dispatch(setAlert('Education Removed', 'success'));\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {msg: err.response.statusText, status: err.response.status}\r\n        })\r\n    }\r\n};\r\n\r\n// Delete account & profile\r\nexport const deleteAccount = () => async dispatch => {\r\n    if (window.confirm('Are you sure ? This can NOT be undone!')) {\r\n        try {\r\n            await axios.delete('/api/profile');\r\n            dispatch({type: CLEAR_PROFILE});\r\n            dispatch({type: ACCOUNT_DELETED});\r\n\r\n            dispatch(setAlert('Your account has been permanantly deleted'));\r\n        } catch (err) {\r\n            dispatch({\r\n                type: PROFILE_ERROR,\r\n                payload: {msg: err.response.statusText, status: err.response.status}\r\n            })\r\n        }\r\n    }\r\n\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}